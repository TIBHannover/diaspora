@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix matonto: <http://matonto.org/ontology/matonto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com/ns/>.
@prefix bacdive: <http://kg.bacdive.dsmz.de/>.




<TripleMap1>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/biosample.csv";
    rml:referenceFormulation ql:CSV
    ];
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/biosample/{ID_biosample}"; 
    rr:class bacdive:Biosample ];

       rr:predicateObjectMap [
        rr:predicate  bacdive:has_ID_biosample;
        rr:objectMap [ rml:reference "ID_biosample"]
    ] ;
    

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_title;
        rr:objectMap [ rml:reference "Title"]
    ] ;
    
    rr:predicateObjectMap [
        rr:predicate  bacdive:has_accession;
        rr:objectMap [ rml:reference "Accession" ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_taxonomy;
        rr:objectMap [ rml:reference "Taxonomy" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_organism;
    rr:objectMap [ rml:reference "Organism" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_SourceSample;
    rr:objectMap [ rml:reference "SourceSample" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_Sampledata;
    rr:objectMap [ rml:reference "Sampledata" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sample_strain;
    rr:objectMap [ rml:reference "sample_strain" ]
    ] ;
    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sample_geo_loc_name;
    rr:objectMap [ rml:reference "sample_geo_loc_name" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sample_lat_lon;
    rr:objectMap [ rml:reference "sample_lat_lon" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sample_collection_date;
    rr:objectMap [ rml:reference "sample_collection_date" ]
    ] ;
    
    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sample_host;
    rr:objectMap [ rml:reference "sample_host" ]
    ] ;


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_ID_strains;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}" ]
    ] .
    

    # rr:predicateObjectMap [
    # rr:predicate  bacdive:has_id_strains;
    # rr:objectMap[
    #     rr:parentTriplesMap <TripleMap2>;
    #     rr:joinCondition [
    #         rr:child "ID_strains";
    #         rr:parent "ID_strains";
    #     ];
    # ] ;
    # ].




# <TripleMap2>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#     rr:subjectMap [
#         rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}";
#         rr:class bacdive:Strain
#     ].
