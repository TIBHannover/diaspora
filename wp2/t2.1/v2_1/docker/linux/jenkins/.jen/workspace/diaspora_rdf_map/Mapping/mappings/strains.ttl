@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix matonto: <http://matonto.org/ontology/matonto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com/ns/>.
@prefix bacdive: <http://kg.bacdive.dsmz.de/>.
@prefix dsm: <http://kg.bacdive.dsm.de/>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.


<TripleMap1>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}"; 
    rr:class bacdive:Strain ];

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_domain;
        rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/domain/{ID_strains}" ]
    ] ;

 
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_phylum;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/phylum/{ID_strains}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_class;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/class/{ID_strains}" ]
    ] ;
   
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_ordo;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/ordo/{ID_strains}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_family;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/family/{ID_strains}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_species_epithet;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/species_epithet/{ID_strains}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_genus;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/genus/{ID_strains}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_species;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/species/{ID_strains}" ]
    ] ;

    

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_subspecies_epithet;
    rr:objectMap [ rml:reference "subspecies_epithet" ]
    ] ;


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_designation;
    rr:objectMap [ rml:reference "designation" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_variant;
    rr:objectMap [ rml:reference "variant" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_full_scientific_name;
    rr:objectMap [ rml:reference "full_scientific_name" ]
    ] ;

     rr:predicateObjectMap [
    rr:predicate  bacdive:has_strain_number;
    rr:objectMap [ rml:reference "strain_number" ]
    ] ;


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_reference;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{ID_reference}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_dsmz_strain;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{DSMZ_ID_Strain}" ]
    ] ;
    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_dsm_num;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{DSM_num}" ]
    ] ;
    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_bacdive;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{BacDive_ID}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_last_change;
    rr:objectMap [ rml:reference "last_change" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_cell_morphology;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap2>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_colony_morphology;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap3>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_culture_temp;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap4>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_enzymes;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap5>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_fa_profile;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap6>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_gc_content;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap7>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_halophily;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap8>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_is_link;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap9>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_20a;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap10>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_20e;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap11>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_20ne;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap12>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];
 
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_20str;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap13>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_50chac;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap14>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_50chas;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap15>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_cam;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap16>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_coryne;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap17>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_id32e;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap18>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_id32sta;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap19>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_list;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap20>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_nh;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap21>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_rid32a;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap22>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_rid32str;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap23>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_sta;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap24>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_kit_api_zym;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap25>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_met_antibiogram;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap26>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

     rr:predicateObjectMap [
    rr:predicate  bacdive:has_met_antibiotica;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap27>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_met_production;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap28>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_met_test;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap29>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_met_util;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap30>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_multicellular_morphology;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap31>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_multimedia;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap32>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_murein;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap33>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_nutrition_type;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap34>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_observation;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap35>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_oxygen_tolerance;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap36>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_pigmentation;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap37>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_risk_assessment;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap38>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_spore_formation;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap39>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_strain_history;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap40>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_strain_synonyms;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap41>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_tolerance;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap42>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_biosample;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap43>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_compound_production;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap44>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_culture_medium;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap45>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_culture_ph;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap46>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sequence_16s;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap47>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_sequence_genomes;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap48>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_literature;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap49>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ].

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_ed_pathways;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap50>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ].


    <TripleMap51>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/domain/{ID_strains}"; 
    rr:class bacdive:Domain ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "domain" ]
    ] .  


<TripleMap52>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/phylum/{ID_strains}"; 
    rr:class bacdive:Phylum ];

      rr:predicateObjectMap [
        rr:predicate  rdfs:label;
        rr:objectMap [rml:reference "phylum" ]
    ] .



<TripleMap53>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/class/{ID_strains}"; 
    rr:class bacdive:Class ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "class" ]
    ] .

<TripleMap54>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];
    


    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/ordo/{ID_strains}"; 
    rr:class bacdive:Ordo ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "ordo" ]
    ] .


  <TripleMap55>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];  
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/family/{ID_strains}"; 
    rr:class bacdive:Family ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "family" ]
    ] .

<TripleMap56>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/genus/{ID_strains}"; 
    rr:class bacdive:Genus ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "genus" ]
    ] .
    
  <TripleMap57>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/species/{ID_strains}"; 
    rr:class bacdive:Species ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "species" ]
    ].
    # rr:transform [
    #   rr:expression "replace(.,'%20', ' ')";
    #   rr:datatype xsd:string;
    # ]]
    # ] .

<TripleMap58>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/species_epithet/{ID_strains}"; 
    rr:class bacdive:Species_epithet ];

    rr:predicateObjectMap [
    rr:predicate  rdfs:label;
    rr:objectMap [rml:reference "species_epithet" ]
    ] .








#     <TripleMap2>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/cell_morphology.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#      rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/cell_morphology/{ID_cell_morphology}"; 
#     rr:class bacdive:Cell_morphology ].

    
#     <TripleMap3>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/colony_morphology.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/colony_morphology/{ID_colony_morphology}"; 
#     rr:class bacdive:Colony_morphology ].

#     <TripleMap4>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_temp.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/culture_temp/{ID_culture_temp}"; 
#     rr:class bacdive:Culture_temp ].

  
#   <TripleMap5>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/enzymes.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/enzymes/{ID_enzymes}"; 
#     rr:class bacdive:Enzyme ].


#    <TripleMap6>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/fa_profile.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/fa_profile/{ID_FA_profile}"; 
#     rr:class bacdive:Fa_profile ].

#     <TripleMap7>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/gc_content.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/gc_content/{ID_GC_content}"; 
#     rr:class bacdive:Gc_content ].


#   <TripleMap8>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/halophily.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/halophily/{ID_halophily}"; 
#     rr:class bacdive:Halophily ].


#    <TripleMap9>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/is_link.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/is_link/{PK_IS_link}"; 
#     rr:class bacdive:Is_link ].


#     <TripleMap10>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_20a.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_20a/{ID_kit_api_20A}"; 
#     rr:class bacdive:Kit_api_20a ].

#      <TripleMap11>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_20e.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_20e/{ID_kit_api_20E}"; 
#     rr:class bacdive:Kit_api_20e ].

#      <TripleMap12>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_20ne.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_20ne/{ID_kit_api_20NE}"; 
#     rr:class bacdive:Kit_api_20ne ].

#     <TripleMap13>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_20str.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_20str/{ID_kit_api_20STR}"; 
#     rr:class bacdive:Kit_api_20str  ].

#     <TripleMap14>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_50chac.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_50chac/{ID_kit_api_50CHac}"; 
#     rr:class bacdive:Kit_api_50CHac  ].

#    <TripleMap15>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_50chas.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_50chas/{ID_kit_api_50CHas}"; 
#     rr:class bacdive:Kit_api_50CHas  ].
 
#     <TripleMap16>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_cam.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_50chas/{ID_kit_api_CAM}"; 
#     rr:class bacdive:Kit_api_cam  ].

#     <TripleMap17>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_coryne.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_coryne/{ID_kit_api_coryne}"; 
#     rr:class bacdive:Kit_api_coryne  ].


  
#     <TripleMap18>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_id32e.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_id32e/{ID_kit_api_ID32E}"; 
#     rr:class bacdive:Kit_api_id32e   ].


#     <TripleMap19>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_id32sta.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_id32sta/{ID_kit_api_ID32STA}"; 
#     rr:class bacdive:Kit_api_id32sta   ].

    
#     <TripleMap20>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_list.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_list/{ID_kit_api_LIST}"; 
#     rr:class bacdive:Kit_api_list   ].

#     <TripleMap21>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_nh.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_nh/{ID_kit_api_NH}"; 
#     rr:class bacdive:Kit_api_nh   ].

#     <TripleMap22>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_rid32a.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_rid32a/{ID_kit_api_rID32A}"; 
#     rr:class bacdive:Kit_api_rid32a   ].

#     <TripleMap23>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_rid32str.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_rid32str/{ID_kit_api_rID32STR}"; 
#     rr:class bacdive:Kit_api_rid32STR   ].

#     <TripleMap24>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_sta.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_sta/{ID_kit_api_STA}"; 
#     rr:class bacdive:Kit_api_sta   ].

#     <TripleMap25>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/kit_api_zym.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/kit_api_zym/{ID_kit_api_zym}"; 
#     rr:class bacdive:Kit_api_zym   ].

#     <TripleMap26>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_antibiogram.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/met_antibiogram/{ID_met_antibiogram}"; 
#     rr:class bacdive:Met_antibiogram   ].

#       <TripleMap27>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_antibiotica.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/met_antibiotica/{ID_met_antibiotica}"; 
#     rr:class bacdive:Met_antibiotica   ].

#     <TripleMap28>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_production.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/met_production/{ID_met_production}"; 
#     rr:class bacdive:Met_production   ].

#     <TripleMap29>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_test.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/met_test/{ID_met_test}"; 
#     rr:class bacdive:Met_test   ].

#     <TripleMap30>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_util.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/met_util/{ID_met_util}"; 
#     rr:class bacdive:Met_util   ].

#     <TripleMap31>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/multicellular_morphology.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/multicellular_morphology/{ID_multicellular_morphology}"; 
#     rr:class bacdive:Multicellular_morphology   ].

#     <TripleMap32>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/multimedia.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/multimedia/{ID_multimedia}"; 
#     rr:class bacdive:Multimedia   ].

#     <TripleMap33>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/murein.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/murein/{ID_murein}"; 
#     rr:class bacdive:Murein   ].

#     <TripleMap34>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/nutrition_type.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/nutrition_type/{ID_nutrition_type}"; 
#     rr:class bacdive:Nutrition_type   ].

    # <TripleMap35>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/observation.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    #   rr:subjectMap 
    #  [ rr:template "http://kg.bacdive.dsmz.de/observation/{ID_observation}"; 
    # rr:class bacdive:Observation   ].


    <TripleMap36>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/oxygen_tolerance.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/oxygen_tolerance/{ID_oxygen_tolerance}"; 
    rr:class bacdive:Oxygen_tolerance   ].

#     <TripleMap37>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/pigmentation.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/pigmentation/{ID_pigmentation}"; 
#     rr:class bacdive:Pigmentation   ].

    <TripleMap38>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/risk_assessment.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/risk_assessment/{ID_risk_assessment}"; 
    rr:class bacdive:Risk_assessment   ].

    <TripleMap39>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/spore_formation.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/spore_formation/{ID_spore_formation}"; 
    rr:class bacdive:Spore_formation   ].

    
    <TripleMap40>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strain_history.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/strain_history/{ID_strain_history}"; 
    rr:class bacdive:Strain_history   ].


    
    <TripleMap41>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strain_synonyms.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/strain_synonyms/{ID_strain_synonyms}"; 
    rr:class bacdive:Strain_synonyms   ].



#     <TripleMap42>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/tolerance.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#       rr:subjectMap 
#      [ rr:template "http://kg.bacdive.dsmz.de/tolerance/{ID_tolerance}"; 
#     rr:class bacdive:Tolerance   ].

    # <TripleMap43>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/biosample.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    #   rr:subjectMap 
    #  [ rr:template "http://kg.bacdive.dsmz.de/biosample/{ID_biosample}"; 
    # rr:class bacdive:Biosample  ].

    <TripleMap44>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/compound_production.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/compound_production/{ID_compound_production}"; 
    rr:class bacdive:Compound_production  ].

    <TripleMap45>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_medium.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/culture_medium/{ID_culture_medium}"; 
    rr:class bacdive:Culture_medium  ].

    <TripleMap46>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_ph.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/culture_ph/{ID_culture_pH}"; 
    rr:class bacdive:Culture_ph  ].

    # <TripleMap47>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/sequence_16s.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    #   rr:subjectMap 
    #  [ rr:template "http://kg.bacdive.dsmz.de/sequence_16s/{ID_sequence}"; 
    # rr:class bacdive:Sequence_16s  ].


  #  <TripleMap48>
  #   a rr:TriplesMap;

  #   rml:logicalSource [ rml:source "../../../diaspora_to_csv/sequence_genomes.csv";
  #   rml:referenceFormulation ql:CSV
  #   ];

  #     rr:subjectMap 
  #    [ rr:template "http://kg.bacdive.dsmz.de/sequence_genomes/{ID_sequence}"; 
  #   rr:class bacdive:Sequence_genomes  ].

    # <TripleMap49>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/literature.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    #   rr:subjectMap 
    #  [ rr:template "http://kg.bacdive.dsmz.de/literature/{literature_id}"; 
    # rr:class bacdive:Sequence_genomes  ].

    <TripleMap50>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/ed_pathways.csv";
    rml:referenceFormulation ql:CSV
    ];

      rr:subjectMap 
     [ rr:template "http://kg.bacdive.dsmz.de/ed_pathways/{id}"; 
    rr:class bacdive:Ed_pathways  ].

