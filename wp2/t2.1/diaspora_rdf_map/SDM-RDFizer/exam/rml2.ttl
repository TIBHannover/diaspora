@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix matonto: <http://matonto.org/ontology/matonto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com/ns/>.
@prefix bacdive: <http://kg.bacdive.dsmz.de/>.



<TripleMap1>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strains.csv";
    rml:referenceFormulation ql:CSV
    ];
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}"; 
    rr:class bacdive:Strain ];

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_domain;
        rr:objectMap [ rml:reference "domain"]
    ] ;
    

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_class;
        rr:objectMap [ rml:reference "class" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_ordo;
    rr:objectMap [ rml:reference "ordo" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_family;
    rr:objectMap [ rml:reference "family" ]
    ] ;



    rr:predicateObjectMap [
    rr:predicate  bacdive:has_genus;
    rr:objectMap [ rml:reference "genus" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_species;
    rr:objectMap [ rml:reference "species" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_species_epithet;
    rr:objectMap [ rml:reference "species_epithet" ]
    ] ;
    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_subspecies_epithet;
    rr:objectMap [ rml:reference "subspecies_epithet" ]
    ] ;


    rr:predicateObjectMap [
    rr:predicate  bacdive:has_designation;
    rr:objectMap [ rml:reference "designation" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_variant;
    rr:objectMap [ rml:reference "variant" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_full_scientific_name;
    rr:objectMap [ rml:reference "full_scientific_name" ]
    ] ;

     rr:predicateObjectMap [
    rr:predicate  bacdive:has_strain_number;
    rr:objectMap [ rml:reference "strain_number" ]
    ] ;


    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap2>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap3>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap4>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap5>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap6>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap7>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap8>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap9>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap10>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    # rr:predicateObjectMap [
    # rr:predicate  bacdive:is_strain_id_of;
    # rr:objectMap[
    #     rr:parentTriplesMap <TripleMap11>;
    #     rr:joinCondition [
    #         rr:child "ID_strains";
    #         rr:parent "ID_strains";
    #     ];
    # ] ;
    # ].

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap12>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap14>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

     rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap15>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

   rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap16>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap17>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap18>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap19>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap20>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    
    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap21>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

        
    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap22>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

        rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap23>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap24>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap25>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap26>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap27>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    # rr:predicateObjectMap [
    # rr:predicate  bacdive:is_strain_id_of;
    # rr:objectMap[
    #     rr:parentTriplesMap <TripleMap28>;
    #     rr:joinCondition [
    #         rr:child "ID_strains";
    #         rr:parent "ID_strains";
    #     ];
    # ] ;
    # ].

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap29>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap30>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ];

    rr:predicateObjectMap [
    rr:predicate  bacdive:is_strain_id_of;
    rr:objectMap[
        rr:parentTriplesMap <TripleMap31>;
        rr:joinCondition [
            rr:child "ID_strains";
            rr:parent "ID_strains";
        ];
    ] ;
    ].




























<TripleMap2>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/cell_morphology.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/cell_morphology/{ID_strains}";
        rr:class bacdive:Cell_morphology
    ].

<TripleMap3>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/colony_morphology.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/colony_morphology/{ID_strains}";
        rr:class bacdive:Colony_morphology
    ].

    <TripleMap4>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_ph.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/culture_ph/{ID_strains}";
        rr:class bacdive:Culture_ph
    ].

    <TripleMap5>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_temp.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/culture_temp/{ID_strains}";
        rr:class bacdive:Culture_temp
    ].

    <TripleMap6>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/halophily.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/halophily/{ID_strains}";
        rr:class bacdive:Halophily
    ].

    <TripleMap7>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/enzymes.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/enzymes/{ID_strains}";
        rr:class bacdive:Enzyme
    ].

    <TripleMap8>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_antibiotica.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/met_antibiotica/{ID_strains}";
        rr:class bacdive:Met_antibiotica
    ].

    <TripleMap9>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_production.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/met_production/{ID_strains}";
        rr:class bacdive:Met_production
    ].

    
    <TripleMap10>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_util.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/met_util/{ID_strains}";
        rr:class bacdive:Met_unit
    ].

    # <TripleMap11>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/origin.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    # rr:subjectMap [
    #     rr:template "http://kg.bacdive.dsmz.de/origin/{ID_strains}";
    #     rr:class bacdive:Origin
    # ].

    
    <TripleMap12>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/oxygen_tolerance.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/oxygen_tolerance/{ID_strains}";
        rr:class bacdive:Oxygen_tolerance
    ].


    <TripleMap14>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/risk_assessment.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/risk_assessment/{ID_strains}";
        rr:class bacdive:Oxygen_tolerance
    ].

    <TripleMap15>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/spore_formation.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/spore_formation/{ID_strains}";
        rr:class bacdive:Spore_formation
    ].

    <TripleMap16>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/culture_medium.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/culture_medium/{ID_strains}";
        rr:class bacdive:Culture_medium
    ].

    <TripleMap17>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_test.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/met_test/{ID_strains}";
        rr:class bacdive:Met_test
    ].

    <TripleMap18>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/nutrition_type.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/nutrition_type/{ID_strains}";
        rr:class bacdive:Nutrition_type
    ].

    <TripleMap19>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/gc_content.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/gc_content/{ID_strains}";
        rr:class bacdive:GC_content
    ].

    
    <TripleMap20>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/multicellular_morphology.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/multicellular_morphology/{ID_strains}";
        rr:class bacdive:Multicellular_morphology
    ].

    <TripleMap21>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/pigmentation.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/pigmentation/{ID_strains}";
        rr:class bacdive:Pigmentation
    ].

    <TripleMap22>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/sequence.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/sequence/{ID_strains}";
        rr:class bacdive:Sequence
    ].

    
    <TripleMap23>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/fa_profile.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/fa_profile/{ID_strains}";
        rr:class bacdive:FA_profile
    ].

    <TripleMap24>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_antibiogram.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/met_antibiogram/{ID_strains}";
        rr:class bacdive:FA_profile
    ].

    <TripleMap25>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/murein.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/murein/{ID_strains}";
        rr:class bacdive:Murein
    ].

    <TripleMap26>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/fa_meta.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/fa_meta/{ID_strains}";
        rr:class bacdive:Fa_meta
    ].

    <TripleMap27>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/tolerance.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/tolerance/{ID_strains}";
        rr:class bacdive:Tolerance
    ].

    # <TripleMap28>
    # a rr:TriplesMap;

    # rml:logicalSource [ rml:source "../../../diaspora_to_csv/Strain_history.csv";
    # rml:referenceFormulation ql:CSV
    # ];

    # rr:subjectMap [
    #     rr:template "http://kg.bacdive.dsmz.de/Strain_history/{ID_strains}";
    #     rr:class bacdive:Strain_history
    # ].

    <TripleMap29>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/observation.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/observation/{ID_strains}";
        rr:class bacdive:Observation
    ].

    <TripleMap30>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/strain_synonyms.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/strain_synonyms/{ID_strains}";
        rr:class bacdive:Strain_synonyms
    ].

    <TripleMap31>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/compound_production.csv";
    rml:referenceFormulation ql:CSV
    ];

    rr:subjectMap [
        rr:template "http://kg.bacdive.dsmz.de/compound_production/{ID_strains}";
        rr:class bacdive:Compound_production
    ].





















