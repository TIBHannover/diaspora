@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix matonto: <http://matonto.org/ontology/matonto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com/ns/>.
@prefix bacdive: <http://kg.bacdive.dsmz.de/>.




<TripleMap1>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/met_production.csv";
    rml:referenceFormulation ql:CSV
    ];
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/met_production/{ID_met_production}"; 
    rr:class bacdive:Met_production ];

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_metabolite_prod;
        rr:objectMap [ rml:reference "metabolite_prod"]
    ] ;
    
    rr:predicateObjectMap [
        rr:predicate  bacdive:has_production;
        rr:objectMap [ rml:reference "production" ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_excreted;
        rr:objectMap [ rml:reference "excreted" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_chebi_ID;
    rr:objectMap [ rml:reference "chebi_ID" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_FK_metabolites;
    rr:objectMap [ rml:reference "FK_metabolites" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_reference;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{ID_reference}" ]
    ] ;

    # rr:predicateObjectMap [
    # rr:predicate  bacdive:has_strain;
    # rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}" ]
    # ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_manual_annotation;
    rr:objectMap [ rml:reference "manual_annotation" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_last_change;
    rr:objectMap [ rml:reference "last_change" ]
    ] .

    
    