@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix matonto: <http://matonto.org/ontology/matonto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.com/ns/>.
@prefix bacdive: <http://kg.bacdive.dsmz.de/>.




<TripleMap1>
    a rr:TriplesMap;

    rml:logicalSource [ rml:source "../../../diaspora_to_csv/murein.csv";
    rml:referenceFormulation ql:CSV
    ];
    

    rr:subjectMap [ rr:template "http://kg.bacdive.dsmz.de/murein/{ID_murein}"; 
    rr:class bacdive:Murein ];

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_murein_short_index;
        rr:objectMap [ rml:reference "murein_short_index"]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_murein_types;
        rr:objectMap [ rml:reference "murein_types"]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_FK_tbl_mureins_micro;
        rr:objectMap [ rml:reference "FK_tbl_mureins_micro"]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_timestamp_micro;
        rr:objectMap [ rml:reference "timestamp_micro"]
    ] ;

    rr:predicateObjectMap [
        rr:predicate  bacdive:has_last_change;
        rr:objectMap [ rml:reference "last_change"]
    ] ;


    
    rr:predicateObjectMap [
    rr:predicate  bacdive:has_id_reference;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/reference/{ID_reference}" ]
    ] ;

    rr:predicateObjectMap [
    rr:predicate  bacdive:has_ID_strains;
    rr:objectMap [ rr:template "http://kg.bacdive.dsmz.de/strains/{ID_strains}" ]
    ] .


    # rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_P_antibiogram;
    #     rr:objectMap [ rml:reference "P_antibiogram"]
    # ] ;

    #     rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_P_rgStart;
    #     rr:objectMap [ rml:reference "P_rgStart"]
    # ] ;

    #     rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_P_rgEnd;
    #     rr:objectMap [ rml:reference "P_rgEnd"]
    # ] ;

    #     rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_OX_res;
    #     rr:objectMap [ rml:reference "OX_res"]
    # ] ;

    #     rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_OX_antibiogram;
    #     rr:objectMap [ rml:reference "OX_antibiogram"]
    # ] ;

    #     rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_OX_rgStart;
    #     rr:objectMap [ rml:reference "OX_rgStart"]
    # ] ;
    
    #         rr:predicateObjectMap [
    #     rr:predicate  bacdive:has_OX_rgEnd;
    #     rr:objectMap [ rml:reference "OX_rgEnd"]
    # ] .
    
    
    
    
   
  
#     rr:predicateObjectMap [
#     rr:predicate  bacdive:is_culture_medium_of;
#     rr:objectMap[
#         rr:parentTriplesMap <TripleMap2>;
#         rr:joinCondition [
#             rr:child "ID_colony_morphology";
#             rr:parent "ID_colony_morphology";
#         ];
#     ] ;
#     ].




# <TripleMap2>
#     a rr:TriplesMap;

#     rml:logicalSource [ rml:source "../../../diaspora_to_csv/colony_morphology.csv";
#     rml:referenceFormulation ql:CSV
#     ];

#     rr:subjectMap [
#         rr:template "http://kg.bacdive.dsmz.de/colony_morphology/{ID_colony_morphology}";
#         rr:class bacdive:Colony_morphology
#     ].
